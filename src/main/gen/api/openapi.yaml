openapi: 3.0.3
info:
  title: Aston Bank Dto
  version: 1.0.0
servers:
- url: /
paths: {}
components:
  responses:
    Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BackendError'
      description: Ошибка
  schemas:
    UserBaseDto:
      properties:
        name:
          description: Имя пользователя
          type: string
      type: object
    UserCreateDto:
      allOf:
      - $ref: '#/components/schemas/UserBaseDto'
      description: DTO для создания Пользователя
      required:
      - name
      type: object
    UserUpdateDto:
      allOf:
      - $ref: '#/components/schemas/UserBaseDto'
      description: DTO для обновления Пользователя
      required:
      - name
      type: object
    UserViewDto:
      allOf:
      - $ref: '#/components/schemas/UserBaseDto'
      description: Представление Пользователя
      properties:
        uuid:
          description: Глобальный идентификатор
          format: uuid
          type: string
        accounts:
          items:
            $ref: '#/components/schemas/EntityViewDto'
          type: array
      required:
      - name
      - uuid
      type: object
    AccountBaseDto:
      properties:
        name:
          description: Имя пользователя
          type: string
        pin:
          description: ПИН
          type: string
      type: object
    AccountCreateDto:
      allOf:
      - $ref: '#/components/schemas/AccountBaseDto'
      description: DTO для создания счета
      required:
      - pin
      type: object
    AccountUpdateDto:
      allOf:
      - $ref: '#/components/schemas/AccountBaseDto'
      description: DTO для обновления счета
      required:
      - name
      type: object
    AccountViewDto:
      description: Представление счета
      properties:
        uuid:
          description: Глобальный идентификатор
          format: uuid
          type: string
        user:
          $ref: '#/components/schemas/EntityViewDto'
        balance:
          description: Баланс счета
          format: float
          type: number
        number:
          description: Номер счета
          type: integer
      required:
      - balance
      - name
      - uuid
      type: object
    TransactionBaseDto:
      properties:
        userUuid:
          description: Глобальный идентификатор пользователя
          format: uuid
          type: string
        accountUuid:
          description: Глобальный идентификатор счета
          format: uuid
          type: string
        amount:
          description: Сумма транзакции
          format: double
          type: number
      required:
      - accountUuid
      - amount
      - userUuid
      type: object
    TransactionWithdrawDto:
      allOf:
      - $ref: '#/components/schemas/TransactionBaseDto'
      description: DTO для снятия денег
      properties:
        pin:
          description: ПИН-код
          type: string
      required:
      - pin
      type: object
    TransactionDepositDto:
      allOf:
      - $ref: '#/components/schemas/TransactionBaseDto'
      description: DTO для пополнения счета
    TransactionTransferDto:
      allOf:
      - $ref: '#/components/schemas/TransactionBaseDto'
      description: DTO для перевода денег
      properties:
        accountTransferUuid:
          description: Глобальный идентификатор счета получателя
          format: uuid
          type: string
        pin:
          description: ПИН-код
          type: string
      required:
      - accountTransferUuid
      - pin
    EntityViewDto:
      description: Общее отображение сущности
      properties:
        uuid:
          description: Глобальный идентификатор
          format: uuid
          type: string
        name:
          description: Значение
          example: Example name
          type: string
      required:
      - name
      - uuid
      type: object
    StringStringMap:
      additionalProperties:
        type: string
      description: |
        Описание Map
      example:
        email: Значение для email
        name: Значение для name
      type: object
    BackendError:
      description: Стандартный ответ при негативном сценарии
      properties:
        code:
          description: Код ошибки
          example: "404"
          type: string
        message:
          description: Сообщение
          example: NOT_FOUND
          type: string
        description:
          description: Доп информация
          example: "Модуль c uuid: 6469185a-9039-4e7d-a226-5a65c9f9489e не найден"
          type: string
        details:
          additionalProperties:
            type: string
          description: |
            Описание Map
          example:
            email: Значение для email
            name: Значение для name
          type: object
      required:
      - code
      - message
      type: object

